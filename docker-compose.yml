name: kikubopos_backend_project

networks:
  kikubo_network:
    driver: bridge
  shared-pk-network:
    external: true
    name: shared-pk-network

volumes:
  postgres_data:
    driver: local
  static_files:
    driver: local
  media_files:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

services:
  postgres_db:
    image: postgres:16-bookworm
    container_name: kikubo_postgres_container
    restart: unless-stopped
    ports:
      - '127.0.0.1:5432:5432'  # ← CHANGED: Only accessible from localhost
    networks:
      - kikubo_network
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-kikubo}
      POSTGRES_USER: ${POSTGRES_USER:-kikubo_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-kikubo_user} -d ${POSTGRES_DB:-kikubo}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: kikubo_pgadmin_container
    restart: unless-stopped
    ports:
      - "127.0.0.1:5050:80"  # Only accessible from localhost
    networks:
      - kikubo_network
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@kikubo.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: 'True'
      PGADMIN_CONFIG_LOGIN_BANNER: '"Authorized Access Only"'
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 10
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres_db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "-O", "-", "http://localhost:80/misc/ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  kikubo_backend_app:
    image: kikubo_backend_image
    container_name: kikubo_backend_container
    build:
      context: .
      dockerfile: Dockerfile
    command: /django.sh
    depends_on:
      postgres_db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - kikubo_network
      - shared-pk-network
    ports:
      - "${APP_PORT:-6200}:6200"
    volumes:
      - static_files:/app/staticfiles
      - media_files:/app/media
      - ./logs:/app/logs
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-kikubo_user}:${POSTGRES_PASSWORD}@postgres_db:5432/${POSTGRES_DB:-kikubo}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--database", "default"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:alpine
    container_name: kikubo_redis_container
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}", "--appendonly", "yes"]
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"  # ← CHANGED: Also secure Redis
    networks:
      - kikubo_network
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  celery:
    image: kikubo_backend_image
    container_name: kikubo_celery_container
    command: celery -A kikuboposmachine worker -E -l info
    restart: unless-stopped
    volumes:
      - static_files:/app/staticfiles
      - media_files:/app/media
      - ./logs:/app/logs
    depends_on:
      - postgres_db
      - redis
      - kikubo_backend_app
    networks:
      - kikubo_network
      - shared-pk-network
    env_file:
      - .env

  flower:
    image: kikubo_backend_image
    container_name: kikubo_flower_container
    restart: unless-stopped
    command: celery -A kikuboposmachine flower --basic_auth=admin:password123
    ports:
      - "127.0.0.1:5555:5555"  # ← CHANGED: Secure Flower too
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - kikubo_network
    env_file:
      - .env

  beat:
    image: kikubo_backend_image
    container_name: kikubo_beat_container
    restart: unless-stopped
    command: celery -A kikuboposmachine beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - static_files:/app/staticfiles
      - media_files:/app/media
      - ./logs:/app/logs
    networks:
      - kikubo_network
      - shared-pk-network
    depends_on:
      redis:
        condition: service_healthy
      kikubo_backend_app:
        condition: service_healthy
    env_file:
      - .env